@model serveurJDRMVC.Models.Effets.Effet

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Effet</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ChanceEffetBonus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ChanceEffetBonus, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ChanceEffetBonus, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TempsAvantEffetBonus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TempsAvantEffetBonus, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TempsAvantEffetBonus, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Penetration, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Penetration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Penetration, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MinHit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MinHit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MinHit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaxHit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaxHit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaxHit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DureMin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DureMin, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DureMin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DureMax, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DureMax, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DureMax, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("labelStatUtil", "Stat Utile", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("StatUtil", new SelectList(ViewBag.ListStat, "Id", "Nom"));
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CoefStatUtil, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CoefStatUtil, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CoefStatUtil, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("labelStatReduc", "Stat Reduction", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("StatReduc", new SelectList(ViewBag.ListStat, "Id", "Nom"));
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CoefStatReduc, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CoefStatReduc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CoefStatReduc, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cible, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Cible, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Cible, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CumulMax, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CumulMax, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CumulMax, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ChanceResist, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ChanceResist, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ChanceResist, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("labelStatResist", "Stat resistance", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("StatResist", new SelectList(ViewBag.ListStat, "Id", "Nom"));
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ValeurBase, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ValeurBase, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ValeurBase, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("labelStatAffecter", "Stat Affecter", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("StatAffecter", new SelectList(ViewBag.ListStat, "Id", "Nom"));
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Drain, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Drain, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Drain, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TailleDee, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TailleDee, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TailleDee, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NbDee, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NbDee, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NbDee, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
